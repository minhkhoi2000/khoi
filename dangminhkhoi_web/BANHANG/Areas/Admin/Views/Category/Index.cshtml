@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<BANHANG.contex.catetory>

@{
    ViewBag.Title = "Index";
}
<style>

    /* Set the style for the a tag */
    .pagination a {
        color: black;
        float: left;
        padding: 8px 16px;
        text-decoration: none;
        transition: background-color .3s;
        border: 1px solid #29c9d4;
    }
        /* set the style for the active class */
        .pagination a.active {
            background-color: dodgerblu;
            color: white;
            display: inline-block;
            width: 40px;
            height: 48px;
            border: 1px solid #ffb600;
        }
        /* add background color when user hovers on inactive class */
        .pagination a:hover:not(.active) {
            background-color: #4cff00;
            display: inline-block;
            width: 40px;
            height: 48px;
            border: 1px solid #00ffff;
        }
</style>

<div class="content-wrapper">
    <h2>Loại Sản Phẩm</h2>

    <p>
        @Html.ActionLink("TẠO MỚI", "Create")
    </p>
    @using (Html.BeginForm("Index", "Category", FormMethod.Get))
    {
        <p>
            Tìm tên sản phẩm:@Html.TextBox("SearchString", ViewBag.CurentFilter as string)
            <input type="submit" value="Tìm kiếm" />
        </p>
    }
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().avatar)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().slug)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().showOnHomePage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().displayorder)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().deleted)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().cretedonutc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().updateonutc)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                <td>
                    <img src="~/Content/images/items/@Html.DisplayFor(modelItem => item.avatar)" style="width:100px;height:100px" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.slug)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.showOnHomePage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.displayorder)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.deleted)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.cretedonutc)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.updateonutc)
                </td>
                <td>
                    <a href="@Url.Action("Edit","Product",new { id = item.id })" class="btn btn-ms btn-primary "> <i class="fas fa-edit text-white"></i></a>
                    <a href="@Url.Action("Details","Product",new { id = item.id })" class="btn btn-ms btn-primary "> <i class="fas fa-eye text-white"></i></a>
                    <a href="@Url.Action("Delete","Product",new { id = item.id })" class="btn btn-ms btn-primary "> <i class="fas fa-trash-alt text-white"></i></a>
                </td>
            </tr>
        }
    </table>Trang @(Model.PageCount<Model.PageNumber ? 0:Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, currenFiter = ViewBag.currenFiter }))
</div>